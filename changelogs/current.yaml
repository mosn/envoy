date: June 5, 2024

behavior_changes:
# *Changes that are expected to cause an incompatibility if applicable; deployment changes are likely required*

minor_behavior_changes:
# *Changes that may cause incompatibilities for some users, but should not for most*
- area: adaptive concurrency filter stats
  change: |
    Multiply the gradient value stat by 1000 to make it more granular (values will range between 500 and 2000).
- area: dns
  change: |
    Allowing <envoy_v3_api_field_extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.dns_min_refresh_rate>` to go as low as 1s.
- area: upstream
  change: |
    Upstream now excludes hosts set to ``DRAINING`` state via EDS from load balancing and panic routing
    threshold calculation. This feature can be disabled by setting
    ``envoy.reloadable_features.exclude_host_in_eds_status_draining`` to false.
- area: golang
  change: |
    Change ``RegisterHttpFilterConfigFactoryAndParser`` to ``RegisterHttpFilterFactoryAndConfigParser``.

bug_fixes:
- area: router
  change: |
    Fix a timing issue when upstream requests are empty when decoding data and send local reply when that happends. This is
    controlled by ``envoy_reloadable_features_send_local_reply_when_no_buffer_and_upstream_request``.
- area: quic
  change: |
    Applied 2 QUICHE patches for crash bugs in ``QuicSpdyStream`` ``OnDataAvailable()`` and ``OnInitialHeaderComplete()``.
- area: quic
  change: |
    Fixed crash bug when QUIC downstream stream was read closed and then timed out.
- area: decompression
  change: |
    Fixed a bug where Envoy will go into an endless loop when using the brotli decompressor. If the input stream has
    redundant data, the decompressor will loop forever.
- area: websocket
  change: |
    Only 101 is considered a successful response for websocket handshake for HTTP/1.1, and Envoy as a proxy will proxy the response
    header from upstream to downstream and then close the request if other status is received. This behavior can be
    reverted by ``envoy_reloadable_features_check_switch_protocol_websocket_handshake``.
- area: async http client
  change: |
    Added one option to disable the response body buffering for mirror request. Also introduced a 32MB cap for the response
    buffer, which can be changed by the runtime flag ``http.async_response_buffer_limit`` based on the product needs.
